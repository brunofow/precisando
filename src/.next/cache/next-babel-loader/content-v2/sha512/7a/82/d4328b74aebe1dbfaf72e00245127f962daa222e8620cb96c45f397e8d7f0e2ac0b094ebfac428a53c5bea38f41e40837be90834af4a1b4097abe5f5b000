{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/bruno/Dev/Workspace/Personal/precisando/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/bruno/Dev/Workspace/Personal/precisando/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/bruno/Dev/Workspace/Personal/precisando/src/components/ImageInput/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useEffect, useCallback, useState } from 'react';\nimport { useField } from '@unform/core';\nimport styles from '../../styles/Components/ImageInput.module.css';\n\nvar ImageInput = function ImageInput(_ref) {\n  _s();\n\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"placeholder\"]);\n\n  var inputRef = useRef(null);\n\n  var _useField = useField(name),\n      fieldName = _useField.fieldName,\n      registerField = _useField.registerField,\n      defaultValue = _useField.defaultValue,\n      error = _useField.error;\n\n  var _useState = useState(defaultValue),\n      preview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState(''),\n      updatedFile = _useState2[0],\n      setUpdatedFile = _useState2[1];\n\n  var handlePreview = useCallback(function (e) {\n    var _e$target$files;\n\n    var file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n\n    if (file) {\n      setPreview(null);\n    }\n\n    var validTypes = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG'];\n    var valid = validTypes.filter(function (e) {\n      if (file !== null && file !== void 0 && file.name.includes(e)) {\n        return e;\n      }\n    });\n\n    if (!(file !== null && file !== void 0 && file.name.includes(valid[0]))) {\n      setPreview(null);\n      setUpdatedFile('');\n      alert('Por favor insira a imagem no formato, .png ou .jpg');\n      return;\n    }\n\n    var previewURL = URL.createObjectURL(file);\n    setUpdatedFile(file.name);\n    setPreview(previewURL);\n  }, []);\n  useEffect(function () {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'files[0]',\n      clearValue: function clearValue(ref) {\n        ref.value = '';\n        setPreview(null);\n      },\n      setValue: function setValue(_, value) {\n        setPreview(value);\n      }\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.preview,\n      children: preview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        width: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 51\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputBox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        id: name,\n        type: \"file\",\n        ref: inputRef,\n        onChange: handlePreview,\n        accept: \"image/x-png,image/gif,image/jpeg\"\n      }, rest), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: name,\n        children: updatedFile ? updatedFile : placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ImageInput, \"PLy25Qh+f4iMuX2hCOAadHpiUzM=\", false, function () {\n  return [useField];\n});\n\n_c = ImageInput;\nexport default ImageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"sources":["/home/bruno/Dev/Workspace/Personal/precisando/src/components/ImageInput/index.tsx"],"names":["useRef","useEffect","useCallback","useState","useField","styles","ImageInput","name","placeholder","rest","inputRef","fieldName","registerField","defaultValue","error","preview","setPreview","updatedFile","setUpdatedFile","handlePreview","e","file","target","files","validTypes","valid","filter","includes","alert","previewURL","URL","createObjectURL","ref","current","path","clearValue","value","setValue","_","inputBox"],"mappings":"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","sourcesContent":["import { ChangeEvent, useRef, useEffect, useCallback, useState } from 'react';\nimport { useField } from '@unform/core';\n\nimport styles from '../../styles/Components/ImageInput.module.css';\n\ntype Props = {\n  name: string;\n  placeholder: string\n}\n\ntype InputProps = JSX.IntrinsicElements['input'] & Props;\n\nconst ImageInput: React.FC<InputProps> = ({name, placeholder, ...rest}) => {\n  \n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { fieldName, registerField, defaultValue, error } = useField(name);\n  const [ preview, setPreview ] = useState(defaultValue);\n  const [updatedFile, setUpdatedFile ] = useState('');\n\n  const handlePreview = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n\n    if(file) {\n      setPreview(null)\n    }\n\n    const validTypes = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG'];\n\n    const valid = validTypes.filter(e => {\n      if(file?.name.includes(e)){\n        return e;\n      }\n    })\n\n    if(!file?.name.includes(valid[0])) {\n      setPreview(null);\n      setUpdatedFile('');\n      alert('Por favor insira a imagem no formato, .png ou .jpg')\n      return;\n    }\n\n    const previewURL = URL.createObjectURL(file);\n    setUpdatedFile(file.name);\n\n    setPreview(previewURL);\n  }, [])\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'files[0]',\n      clearValue(ref: HTMLInputElement) {\n        ref.value = '';\n        setPreview(null);\n      },\n      setValue(_: HTMLInputElement, value: string) {\n        setPreview(value);\n      }\n    })\n  }, [fieldName, registerField])\n\n  return (\n    <>\n      <div className={styles.preview}>{preview && <img src={preview} alt=\"Preview\" width=\"100\" />}</div>\n      <div className={styles.inputBox}>\n        <input id={name} type=\"file\" ref={inputRef} onChange={handlePreview} accept=\"image/x-png,image/gif,image/jpeg\" {...rest} />\n        <label htmlFor={name}>{updatedFile ? updatedFile : placeholder}</label>\n      </div>\n      \n    </>\n  )\n}\n\nexport default ImageInput;"]},"metadata":{},"sourceType":"module"}